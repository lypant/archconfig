#!/bin/bash

# Set log file name
LOG_FILE="`pwd`/archconfig_install.log"

# Required files - settings and functions
ARCHCONFIG_SETTINGS_FILE="settings"

# Functions and settings files have to be present
if [[ -f $ARCHCONFIG_SETTINGS_FILE ]]; then
    source $ARCHCONFIG_SETTINGS_FILE
else
    echo "File not found: $ARCHCONFIG_SETTINGS_FILE"
    exit 1
fi

# Now, if we have settings loaded, we know functions file name under ARCHCONFIG_FUNCTIONS_FILE...
# Check if the file is present
if [[ -f $ARCHCONFIG_FUNCTIONS_FILE ]]; then
    source $ARCHCONFIG_FUNCTIONS_FILE
else
    echo "File not found: $ARCHCONFIG_FUNCTIONS_FILE"
    exit 1
fi

# Disks and partitions

# TODO So far partitioning is disabled - I need to think about consistent yest flexible way to address both installation on brand new disk without any partitioning and disks which already contain existing OSes and/or other partitions
# TODO PARTITION DISKS HERE
echo "No automatic disk partitioning so far... please do it manually"
read -sn 1 -p "Any key to continue..."

# Create file system(s)

createRootPartitionFS()
{
    log "Creating root partition file system..."
    executeCommand mkfs.$ROOT_PARTITION_FS $PARTITION_PREFIX$ROOT_PARTITION_HDD$ROOT_PARTITION_NB
    log "Creating root partition file system...done"
}

createSwapPartition()
{
    log "Creating swap partition..."
    executeCommand mkswap $PARTITION_PREFIX$SWAP_PARTITION_HDD$SWAP_PARTITION_NB
    executeCommand swapon $PARTITION_PREFIX$SWAP_PARTITION_HDD$SWAP_PARTITION_NB
    log "Creating swap partition...done"
}

# Mount partition(s)

mountRootPartition()
{
    log "Mounting root partition..."
    executeCommand mount $PARTITION_PREFIX$ROOT_PARTITION_HDD$ROOT_PARTITION_NB $ROOT_PARTITION_MOUNT_POINT
    log "Mounting root partition...done"
}

# Prepare pacman

livecdPacmanTotalDownload()
{
    log "Setting livecd pacman to display total download..."
    executeCommand uncommentVar "TotalDownload" /etc/pacman.conf
    log "Setting livecd pacman to display total download...done"
}

livecdPacmanUpdate()
{
    log "Updating livecd pacman..."
    executeCommand pacman -Syy
    log "Updating livecd pacman...done"
}

# TODO - probably this could be avoided and mirrors for specific country could be used- check aui
rankMirrors()
{
    log "Ranking mirrors..."
    executeCommand cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.original
    executeCommand rankmirrors -n $MIRROR_COUNT /etc/pacman.d/mirrorlist.original > /etc/pacman.d/mirrorlist 
    log "Ranking mirrors...done"
}

# Base system

installBaseSystem()
{
    log "Installing base system..."
    executeCommand pacstrap -i $ROOT_PARTITION_MOUNT_POINT $BASE_SYSTEM_PACKAGES
    log "Installing base system...done"
}

# Fstab

generateFstab()
{
    log "Generating fstab..."
    executeCommand genfstab -L -p $ROOT_PARTITION_MOUNT_POINT >> $ROOT_PARTITION_MOUNT_POINT/etc/fstab 
    log "Generating fstab...done"
}

### ### ### ### Chrooted commands

# Host name

setHostName()
{
    log "Setting host name..."
    archChroot "echo $HOST_NAME > /etc/hostname"
    log "Setting host name...done"
}

### ### Localization

setLocale()
{
    log "Setting locale for  $1..."
    #archChroot "sed -i \"s/^#\(${1}.*\)$/\1/\" /etc/locale.gen"
    #archChroot \"sed -i \\\"s/^#\\\\\(${1}.*\\\\\)$/\\\\\1/\\\" /etc/locale.gen\"
    archChroot "sed -i \\\"s/^#\\\\\(${1}.*\\\\\)$/\\\\\1/\\\" /etc/locale.gen"
    log "Setting locale for $1...done"
}

setLocales()
{
    log "Seting locales..."
    setLocale $LOCALIZATION_LANGUAGE1
    setLocale $LOCALIZATION_LANGUAGE2
    log "Seting locales...done"
}

generateLocales()
{
    log "Generating locales..."
    archChroot "locale-gen"
    log "Generating locales...done"
}

setLanguage()
{
    log "Setting language..."
    archChroot "echo LANG=$LOCALIZATION_LANGUAGE1 > /etc/locale.conf"
    # TODO: This is causing additional output to be shown and changes console screen to green...
    # TODO: Probably this is not needed
    #archChroot "export LANG=$LOCALIZATION_LANGUAGE1"
    log "Setting language...done"
}

setTimeZone()
{
    log "Setting time zone..."
    archChroot "ln -s /usr/share/zoneinfo/$LOCALIZATION_TIME_ZONE /etc/localtime"
    log "Setting time zone...done"
}

setHwClock()
{
    log "Setting hw clock..."
    archChroot "hwclock $LOCALIZATION_HW_CLOCK"
    log "Setting hw clock...done"
}

setConsoleKeymap()
{
    log "Setting console keymap..."
    archChroot "echo KEYMAP=$CONSOLE_KEYMAP > /etc/vconsole.conf"
    log "Setting console keymap...done"
}

setConsoleFont()
{
    log "Setting console font..."
    archChroot "echo FONT=$CONSOLE_FONT >> /etc/vconsole.conf"
    log "Setting console font...done"
}

setWiredNetwork()
{
    log "Setting wired network..."
    archChroot "systemctl enable $NETWORK_SERVICE@$NETWORK_INTERFACE_WIRED.service"
    log "Setting wired network...done"
}

installBootloader()
{
    log "Installing bootloader..."
    archChroot "pacman -S $BOOTLOADER_PACKAGE --noconfirm"
    log "Installing bootloader...done"
}

configureSyslinux()
{
    log "Configuring Syslinux..."
    archChroot "syslinux-install_update -i -a -m"
    archChroot "sed -i \"s/sda3/$BOOT_PARTITION_HDD$BOOT_PARTITION_NB/g\" /boot/syslinux/syslinux.cfg"
    log "Configuring Syslinux...done"
}

setRootPassword()
{
    log "Setting root password..."
    local ASK=1

    while [ $ASK -ne 0 ]; do
        archChroot "passwd"
        ASK=$?
    done
    log "Setting root password...done"
}

### ### Back to non-chroot commands

copyArchconfigFiles()
{
    log "Copying Archconfig files..."
    log "Copying Archconfig files to $ARCHCONFIG_PATH"
    executeCommand mkdir $ARCHCONFIG_PATH
    executeCommand cp -R `pwd`/* $ARCHCONFIG_PATH
    log "Copying Archconfig files...done"
}

unmountPartition()
{
    log "Unmounting partition $1..."
    executeCommand umount $1
    log "Unmounting partition $1...done"
}

unmountPartitions()
{
    log "Unmounting partitions..."
    executeCommand unmountPartition $ROOT_PARTITION_MOUNT_POINT
    # TODO Unmount other partitions here, if any were mounted!
    log "Unmounting partitions...done"
}


#######################################################################

createRootPartitionFS
createSwapPartition
mountRootPartition
livecdPacmanTotalDownload
livecdPacmanUpdate
rankMirrors
installBaseSystem
generateFstab
setHostName
setLocales
generateLocales
setLanguage
setTimeZone
setHwClock
setConsoleKeymap
setConsoleFont
setWiredNetwork
installBootloader
configureSyslinux
setRootPassword
copyArchconfigFiles
unmountPartitions

